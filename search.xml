<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <link href="/2018/04/15/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%8E%E8%BE%93%E5%85%A5URL%E5%88%B0%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
      <url>/2018/04/15/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%8E%E8%BE%93%E5%85%A5URL%E5%88%B0%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>##输入地址<br>在地址栏刚输入几个字符时，可以看到地址栏已经开始检索了，并根据输入字符 提供出模糊检索选项供选择跳转。此时浏览器正通过查找 之前发出的请求记录，书签等方式给出提示。</p><p>##按下跳转（Enter）键<br>输入URL跳转之后，浏览器发起对目标资源的请求，但由于互联网中各个计算机直接的寻址都是通过IP地址查找完成的，因此键入的URL是域名时，第一时间是无法定位目标服务器主机在互联网中的位置的，还需要将URL转换为具体的IP地址，这一过程（找到域名与IP地址之间的一一对应关系）是通过 <a href="https://baike.baidu.com/item/DNS%E8%A7%A3%E6%9E%90/7296803?fr=aladdin" target="_blank" rel="noopener"><strong>DNS解析</strong></a> 完成的，这期间浏览器通常是有会有<strong>发出DNS请求</strong>的。<br>    其实这个过程很像你在手机通讯录里搜索联系人准备打电话。当你在搜索框输入 “哥哥”<br>    通俗来讲就是 地址栏的域名url无法用来构造http请求报文 浏览器需要</p><p>##发送http请求<br>通过DNS解析的过程，浏览器拿到http请求的目标计算机IP地址，于是开始构造请求报文，并尝试与服务器建立TCP连接，三次握手建立连接后，开始发送http报文。<br>    这是访问 百度 的请求报文，包含请求头（1~8）和正文（9）：</p><pre><code>1. 请求方法（GET）、请求的资源（/）即：根目录下默认的index、使用的http协议版本（HTTP/1.1）；2. 请求的主机（host）：www.baidu.com；3. 连接状态：保持连接（keep-alive），避免后续 一些图片、js等资源的请求加载又得重新建立连接TCP；4. 用户代理：包含请求方的操作系统版本、CPU类型、浏览器版本等；5. 客户端建议服务器返回数据的报文格式；6. 客户端接受的内容编码（压缩）格式；7. 客户端可理解的语言；8. cookie：便于服务器进行身份验证,session跟踪的会话信息。（可以弥补http短连接的缺陷）9.请求信息：也就是正文，请求头和请求正文之间是一个空行。get方式下，一般是在url里就能看到正文信息，如https://www.baidu.com/s?wd=cookie中的 **wd=cookie**</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: www.baidu.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.79 Safari/537.36</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en;q=0.6,zh-TW;q=0.4</span><br><span class="line">Cookie: BIDUPSID=D735A7E73027171710B93172CA241933</span><br></pre></td></tr></table></figure><p>##服务器接收请求处理并响应<br>请求报文经过路由层层转发来到目标服务器，web服务器 通过报文解析 拿到必要的请求信息，对于一般的静态资源会直接返回给浏览器客户端，一些动态请求则会调用后端程序，这期间一般还会伴随有对数据库发起的数据请求，处理结束得到返回结果后web服务器就开始着手构造响应报文，并通过刚才的连接会话返回报文数据。<br>响应报文格式与请求报文格式 结构基本一样,包括响应报文头和正文。<br>如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Content-Length: 95</span><br><span class="line">Content-Type: baiduApp/json; v6.27.2.14; charset=UTF-8</span><br><span class="line">Date: Sun, 15 Apr 2018 15:29:07 GMT</span><br><span class="line">Expires: Sun, 15 Apr 2018 16:29:07 GMT</span><br><span class="line">Server: suggestion.baidu.zbb.df</span><br></pre></td></tr></table></figure></p><p>1.由<strong>协议版本</strong>，<strong>状态码</strong>，<strong>状态描述信息</strong>构成的状态行；<br>2.包含 响应报文大小，报文缓存信息， cookie的设置信息等。</p><p>###状态行相关拓展<br><strong>状态行：</strong></p><p>状态行由协议版本、数字形式的状态代码、及相应的状态描述，各元素之间以空格分隔。</p><p>格式:    HTTP-Version Status-Code Reason-Phrase CRLF</p><p>例如:    HTTP/1.1 200 OK \r\n</p><p>– 协议版本：是用http1.0还是其他版本</p><p>– 状态描述：状态描述给出了关于状态代码的简短的文字描述。比如状态代码为200时的描述为 ok</p><p>– 状态代码：状态代码由三位数字组成，第一个数字定义了响应的类别，且有五种可能取值。如下</p><p><strong>1xx</strong>：信息性状态码，表示服务器已接收了客户端请求，客户端可继续发送请求。</p><pre><code>100 Continue101 Switching Protocols</code></pre><p> <strong>2xx</strong>：成功状态码，表示服务器已成功接收到请求并进行处理。</p><pre><code>200 OK 表示客户端请求成功204 No Content 成功，但不返回任何实体的主体部分206 Partial Content 成功执行了一个范围（Range）请求</code></pre><p><strong>3xx</strong>：重定向状态码，表示服务器要求客户端重定向。</p><pre><code>301 Moved Permanently 永久性重定向，响应报文的Location首部应该有该资源的新URL302 Found 临时性重定向，响应报文的Location首部给出的URL用来临时定位资源303 See Other 请求的资源存在着另一个URI，客户端应使用GET方法定向获取请求的资源304 Not Modified 服务器内容没有更新，可以直接读取浏览器缓存 307 Temporary Redirect 临时重定向。与302 Found含义一样。302禁止POST变换为GET，但实际使用时并不一定，307则更多浏览器可能会遵循这一标准，但也依赖于浏览器具体实现</code></pre><p> <strong>4xx</strong>：客户端错误状态码，表示客户端的请求有非法内容。</p><pre><code>400 Bad Request 表示客户端请求有语法错误，不能被服务器所理解401 Unauthonzed 表示请求未经授权，该状态代码必须与 WWW-Authenticate 报头域一起使用403 Forbidden 表示服务器收到请求，但是拒绝提供服务，通常会在响应正文中给出不提供服务的原因404 Not Found 请求的资源不存在，例如，输入了错误的URL</code></pre><p><strong>5xx</strong>：服务器错误状态码，表示服务器未能正常处理客户端的请求而出现意外错误。</p><pre><code>500 Internel Server Error 表示服务器发生不可预期的错误，导致无法完成客户端的请求503 Service Unavailable 表示服务器当前不能够处理客户端的请求，在一段时间之后，服务器可能会恢复正常</code></pre><p>##浏览器接收到响应报文<br>    对于前端来说，这部分才是重头戏，所以会多费些笔墨来写。以最通常的例子，浏览器从响应报文中解析出html正文后，这时候浏览器的渲染引擎开始工作了。<br>    渲染引擎的主要工作分为三个大的流程：<br>    1.通过解析htm标记语言构建DOM树,同时<br>   首先呈现引擎将开始解析 HTML 文档，并将各标记逐个转化成“内容树”上的 DOM 节点。同时也会解析外部 CSS 文件以及样式元素中的样式数据。HTML 中这些带有视觉指令的样式信息将用于创建另一个树结构：呈现树（Render Tree）。</p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>思</title>
      <link href="/2018/04/01/miss/"/>
      <url>/2018/04/01/miss/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>行至水穷处，坐看云起时。<br>是行也思君，坐也思君。</p>]]></content>
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>myFirst</title>
      <link href="/2018/03/27/myFirst/"/>
      <url>/2018/03/27/myFirst/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> first </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/03/25/hello-world/"/>
      <url>/2018/03/25/hello-world/</url>
      <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
